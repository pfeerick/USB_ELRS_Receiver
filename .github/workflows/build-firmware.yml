name: Build and Release Firmware

on:
  push:
    branches:
      - master
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        target:
          - XIAO_SAMD21
          - XIAO_RP2040
          - PICO
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Cache PlatformIO
        uses: actions/cache@v4
        with:
          path: |
            ~/.platformio
            .pio
          key: ${{ runner.os }}-pio-${{ hashFiles('**/platformio.ini') }}
          restore-keys: |
            ${{ runner.os }}-pio-
      
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      
      - name: Install PlatformIO
        run: |
          python -m pip install --upgrade pip
          pip install platformio
      
      - name: Build firmware for ${{ matrix.target }}
        run: |
          pio run -e ${{ matrix.target }}
      
      - name: Prepare firmware artifact
        run: |
          mkdir -p firmware
          # Find the built firmware file
          if [ -f .pio/build/${{ matrix.target }}/firmware.uf2 ]; then
            cp .pio/build/${{ matrix.target }}/firmware.uf2 firmware/USB_ELRS_Receiver_${{ matrix.target }}.uf2
          elif [ -f .pio/build/${{ matrix.target }}/firmware.bin ]; then
            cp .pio/build/${{ matrix.target }}/firmware.bin firmware/USB_ELRS_Receiver_${{ matrix.target }}.bin
          elif [ -f .pio/build/${{ matrix.target }}/firmware.hex ]; then
            cp .pio/build/${{ matrix.target }}/firmware.hex firmware/USB_ELRS_Receiver_${{ matrix.target }}.hex
          fi
      
      - name: Upload firmware artifact
        uses: actions/upload-artifact@v4
        with:
          name: firmware-${{ matrix.target }}
          path: firmware/*
          retention-days: 1

  release:
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: write
    
    steps:
      - name: Download all firmware artifacts
        uses: actions/download-artifact@v4
        with:
          path: firmware-artifacts
      
      - name: Prepare release files
        run: |
          mkdir -p release
          find firmware-artifacts -type f -exec cp {} release/ \;
          ls -la release/
      
      - name: Delete existing latest release
        uses: dev-drprasad/delete-tag-and-release@v1.1
        with:
          tag_name: latest
          github_token: ${{ secrets.GITHUB_TOKEN }}
          delete_release: true
        continue-on-error: true
      
      - name: Create latest release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: latest
          name: Latest Firmware Build
          body: |
            Automated firmware build from the latest commit.
            
            **Commit:** ${{ github.sha }}
            **Date:** ${{ github.event.head_commit.timestamp }}
            
            ### Supported Targets:
            - XIAO_SAMD21
            - XIAO_RP2040  
            - PICO
            
            Download the appropriate firmware file for your board and flash it according to the instructions in the README.
          files: release/*
          draft: false
          prerelease: false